import hashlib
import logging
import time

from tqdm import tqdm

BUF_SIZE = 65536

# Set up logging
logger = logging.getLogger(__name__)


def calculate_hashes(filename):
    md5 = hashlib.new("md5")
    sha256 = hashlib.new("sha256")

    with open(filename, "rb") as f:
        start_time = time.time()
        logged_slow_processing = False  # Flag to track if the slow processing has been logged
        while True:
            data = f.read(BUF_SIZE)
            if not data:
                break
            md5.update(data)
            sha256.update(data)
            elapsed_time = time.time() - start_time
            if elapsed_time > 1.0 and not logged_slow_processing:
                tqdm.write(f"Processing file {filename} is taking a while...")
                logged_slow_processing = True

    return md5.hexdigest(), sha256.hexdigest()
